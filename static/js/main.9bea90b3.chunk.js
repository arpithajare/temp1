(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,function(t,e,s){t.exports=s(12)},,,,,function(t,e,s){},function(t,e,s){},function(t,e,s){},function(t,e,s){},function(t,e,s){"use strict";s.r(e);var n=s(0),o=s.n(n),i=s(2),r=s.n(i);s(8),s(9),s(10);class a extends n.Component{render(){const{col:t,isFinish:e,isStart:s,isWall:n,onMouseDown:i,onMouseEnter:r,onMouseUp:a,row:c}=this.props,l=e?"node-finish":s?"node-start":n?"node-wall":"";return o.a.createElement("div",{id:"node-".concat(c,"-").concat(t),className:"node ".concat(l),onMouseDown:()=>i(c,t),onMouseEnter:()=>r(c,t),onMouseUp:()=>a()})}}function c(t){t.sort((t,e)=>t.distance-e.distance)}function l(t,e){const s=function(t,e){const s=[],{col:n,row:o}=t;o>0&&s.push(e[o-1][n]);o<e.length-1&&s.push(e[o+1][n]);n>0&&s.push(e[o][n-1]);n<e[0].length-1&&s.push(e[o][n+1]);return s.filter(t=>!t.isVisited)}(t,e);for(const n of s)n.distance=t.distance+1,n.previousNode=t}s(11);const u=10,d=15,h=10,m=35;class f extends n.Component{constructor(){super(),this.state={grid:[],mouseIsPressed:!1}}componentDidMount(){const t=p();this.setState({grid:t})}handleMouseDown(t,e){const s=g(this.state.grid,t,e);this.setState({grid:s,mouseIsPressed:!0})}handleMouseEnter(t,e){if(!this.state.mouseIsPressed)return;const s=g(this.state.grid,t,e);this.setState({grid:s})}handleMouseUp(){this.setState({mouseIsPressed:!1})}animateDijkstra(t,e){for(let s=0;s<=t.length;s++){if(s===t.length)return void setTimeout(()=>{this.animateShortestPath(e)},10*s);setTimeout(()=>{const e=t[s];document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node node-visited"},10*s)}}animateShortestPath(t){for(let e=0;e<t.length;e++)setTimeout(()=>{const s=t[e];document.getElementById("node-".concat(s.row,"-").concat(s.col)).className="node node-shortest-path"},50*e)}visualizeDijkstra(){const{grid:t}=this.state,e=t[u][d],s=t[h][m],n=function(t,e,s){const n=[];e.distance=0;const o=function(t){const e=[];for(const s of t)for(const t of s)e.push(t);return e}(t);for(;o.length;){c(o);const e=o.shift();if(!e.isWall){if(e.distance===1/0)return n;if(e.isVisited=!0,n.push(e),e===s)return n;l(e,t)}}}(t,e,s),o=function(t){const e=[];let s=t;for(;null!==s;)e.unshift(s),s=s.previousNode;return e}(s);this.animateDijkstra(n,o)}render(){const{grid:t,mouseIsPressed:e}=this.state;return o.a.createElement(o.a.Fragment,null,o.a.createElement("button",{onClick:()=>this.visualizeDijkstra()},"Visualize Dijkstra's Algorithm"),o.a.createElement("div",{className:"grid"},t.map((t,s)=>o.a.createElement("div",{key:s},t.map((t,s)=>{const{row:n,col:i,isFinish:r,isStart:c,isWall:l}=t;return o.a.createElement(a,{key:s,col:i,isFinish:r,isStart:c,isWall:l,mouseIsPressed:e,onMouseDown:(t,e)=>this.handleMouseDown(t,e),onMouseEnter:(t,e)=>this.handleMouseEnter(t,e),onMouseUp:()=>this.handleMouseUp(),row:n})})))))}}const p=()=>{const t=[];for(let e=0;e<20;e++){const s=[];for(let t=0;t<50;t++)s.push(w(t,e));t.push(s)}return t},w=(t,e)=>({col:t,row:e,isStart:e===u&&t===d,isFinish:e===h&&t===m,distance:1/0,isVisited:!1,isWall:!1,previousNode:null}),g=(t,e,s)=>{const n=t.slice(),o=n[e][s],i={...o,isWall:!o.isWall};return n[e][s]=i,n};var v=function(){return o.a.createElement("div",{className:"App"},o.a.createElement(f,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(o.a.createElement(v,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(t=>{t.unregister()})}],[[3,1,2]]]);
//# sourceMappingURL=main.9bea90b3.chunk.js.map